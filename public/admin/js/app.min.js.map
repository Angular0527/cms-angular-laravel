{"version":3,"sources":["annotated.js"],"names":[],"mappingsfile":"app.min.js","sourcesContent":["(function() {\n\n    'use strict';\n\n    angular\n        .module('app', [\n            'app.core',\n            'app.filters',\n            'app.router',\n            'app.components',\n            'app.services',\n\n            'app.login',\n            'app.profile',\n            'app.dashboard',\n            'app.users',\n            'app.posts',\n            'app.gallery'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.components', []);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.core', [\n            'ui.router',\n            'ngResource',\n            'ui.bootstrap'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.dashboard', [\n            'app.core'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.filters', []);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.gallery', [\n            'app.core'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.login', [\n            'app.core'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.posts', [\n            'app.core',\n            'textAngular'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.router', [\n            'ui.router'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.profile', [\n            'app.core'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.services', [\n            'app.core'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.users', [\n            'app.core'\n        ]);\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.components')\n        .directive(\"deleteModal\", deleteModal);\n    \n    function deleteModal() {\n        var directive = {\n            restrict: \"A\",\n            scope: {\n                cancel: \"&\",\n                delete: \"&\"\n            },\n            templateUrl: \"/admin/views/admin.angular_components.modal\"\n        };\n\n        return directive;\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.components')\n        .directive(\"fileread\", fileread);\n\n    fileread.$inject = ['$parse'];\n    /* @ngInject */\n    function fileread($parse) {\n        var directive = {\n            restrict: \"A\",\n            scope: {\n                fileread: '='\n            },\n            link: link\n        };\n\n        return directive;\n\n        function link(scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                var file = changeEvent.target.files[0];\n\n                var reader = new FileReader();\n                reader.onload = function (loadEvent) {\n\n                    var isImage = file.type.substring(0,5) === 'image';\n\n                    scope.fileread = {\n                        url: loadEvent.target.result,\n                        size: file.size,\n                        type: file.type,\n                        name: file.name,\n                        isImage: isImage\n                    };\n\n                    scope.$apply();\n                };\n                reader.readAsDataURL(file);\n\n            });\n        }\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.components')\n        .directive(\"filereadMultiple\", filereadMultiple);\n\n    filereadMultiple.$inject = ['$parse'];\n    /* @ngInject */\n    function filereadMultiple($parse) {\n        var directive = {\n            restrict: \"A\",\n            scope: {\n                filereadMultiple: '='\n            },\n            link: link\n        };\n\n        return directive;\n\n        function link(scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                var files = changeEvent.target.files;\n                scope.filereadMultiple = [];\n                for(var i=0; i<files.length; i++) {\n                    (function(file) {\n                        var reader = new FileReader();\n                        reader.onload = function (loadEvent) {\n\n                            var isImage = file.type.substring(0,5) === 'image';\n\n                            scope.filereadMultiple.push({\n                                url: loadEvent.target.result,\n                                size: file.size,\n                                type: file.type,\n                                name: file.name,\n                                isImage: isImage\n                            });\n\n                            scope.$apply();\n                        };\n                        reader.readAsDataURL(file);\n                    }(files[i]));\n                }\n            });\n        }\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.components')\n        .directive(\"flashMessage\", flashMessage);\n\n    function flashMessage() {\n        var directive = {\n            restrict: \"E\",\n            templateUrl: '/admin/views/admin.angular_components.flash_messages'\n        };\n\n        return directive;\n    }\n\n}());\n\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.components')\n        .directive(\"pageLoading\", pageLoading);\n\n    function pageLoading() {\n        var directive = {\n            restrict: \"E\",\n            scope: {},\n            template: \"<div class='preloader'><img src='/admin/images/main/preloader.gif' alt='preloader gif'></div>\"\n        };\n\n        return directive;\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.core')\n        .run(appRun);\n\n    /* @ngInject */\n    function appRun(routerHelper) {\n        var otherwise = '/admin/404';\n        routerHelper.configureStates(getStates(), otherwise);\n    }\n    appRun.$inject = [\"routerHelper\"];\n\n    function getStates() {\n        return [\n            {\n                state: '404',\n                config: {\n                    url: '/admin/404',\n                    templateUrl: '/admin/views/admin.error.index'\n                }\n            }\n        ];\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module(\"app.dashboard\")\n        .controller('DashboardController', DashboardController);\n\n    DashboardController.$inject = ['$http'];\n    /* @nginject */\n    function DashboardController($http) {\n\n        var vm = this;\n        vm.getData = getData;\n\n        getData();\n\n        /**\n         * Get Data\n         */\n        function getData() {\n            $http.get('/admin/api/dashboard').success(function(res) {\n                vm.users_count      = res.users_count;\n                vm.posts_count      = res.posts_count;\n                vm.galleries_count  = res.galleries_count;\n                vm.ready = true;\n            });\n        }\n    }\n\n}());\n\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.dashboard')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'dashboard',\n                config: {\n                    url: '/admin/dashboard',\n                    templateUrl: '/admin/views/admin.dashboard.index',\n                    controller: 'DashboardController',\n                    controllerAs: 'vm',\n                    title: 'Dashboard'\n                }\n            }\n        ];\n    }\n})();\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.filters')\n        .filter('roles', roles);\n\n    function roles() {\n        return function(role) {\n            var roleWords = ['Not Auth', 'Auth', 'Admin', 'Super Admin', 'Owner'];\n\n            return roleWords[role];\n        }\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.gallery')\n        .controller('GalleryController', GalleryController);\n\n    GalleryController.$inject = ['$http', '$timeout', '$stateParams', 'Gallery'];\n    /* @ngInject */\n    function GalleryController($http, $timeout, $stateParams, Gallery) {\n\n        var vm = this;\n\n        vm.galleries = {};\n        vm.gallery = {};\n\n        vm.create = create;\n        vm.update = update;\n        vm.deleteGallery = deleteGallery;\n        vm.hideImage = hideImage;\n        vm.showDeleteModal = showDeleteModal;\n        vm.hideDeleteModal = hideDeleteModal;\n        vm.deleteImage = deleteImage;\n        vm.liveSearch = liveSearch;\n        vm.loadMore = loadMore;\n\n        if(! $stateParams.id) { getGalleries(); }\n        if($stateParams.id) { getGallery(); }\n\n        /**\n         * Get all\n         */\n        function getGalleries() {\n            Gallery.get(function (res) {\n                vm.galleries = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n                vm.ready = true;\n            });\n        }\n\n        /**\n         * find by id\n         */\n        function getGallery() {\n            vm.gallery = Gallery.get({id: $stateParams.id}, function() {\n                vm.ready = true;\n                vm.gallery.date = new Date(vm.gallery.date);\n            });\n        }\n\n        /**\n         * Create\n         */\n        function create() {\n            vm.loading = true;\n\n            Gallery.save(vm.gallery, function(res) {\n                _successResponse(res.message);\n                vm.gallery = '';\n            }, function (err) {\n                _errorResponse(err.data, 'Gallery creation failed, see errors below');\n            });\n        }\n\n        /**\n         * Update\n         */\n        function update() {\n            vm.loading = true;\n\n            Gallery.update({id: vm.gallery.id}, vm.gallery, function (res) {\n                _successResponse(res.message);\n            }, function (err) {\n                _errorResponse(err.data, 'Gallery edition failed, see errors below');\n            });\n        }\n\n        /**\n         * Delete image\n         */\n        function deleteImage(id, file, image_id) {\n\n            if(image_id) {\n                $http.post('/admin/api/destroy-gallery-image', {id: id, image_id: image_id}).success(function(res) {\n                    var index = vm.gallery.gallery_images.indexOf(file);\n                    vm.gallery.gallery_images.splice(index, 1);\n                });\n            } else {\n                $http.post('/admin/api/destroy-gallery-image', {id: id }).success(function(res) {\n                    vm.gallery.image = null;\n                });\n            }\n        }\n\n        /**\n         * Hide Image\n         */\n        function hideImage(file) {\n            if(file) {\n                var index = vm.gallery.files.indexOf(file);\n                vm.gallery.files.splice(index, 1);\n            } else {\n                document.getElementById('single-uploader').value = null;\n                vm.gallery.file = null;\n            }\n        }\n\n        /**\n         * Show delete modal\n         */\n        function showDeleteModal(gallery) {\n            vm.gallery = gallery;\n            vm.deleteModal = true;\n        }\n\n        /**\n         * Delete\n         */\n        function deleteGallery() {\n            Gallery.delete({id: vm.gallery.id}, function (res) {\n                vm.galleries.splice(vm.galleries.indexOf(vm.gallery), 1);\n                vm.total = vm.total - 1;\n                vm.deleteModal = false;\n                vm.flash = res.message;\n                $timeout(function () {\n                    vm.flash = false;\n                }, 3000);\n            });\n        }\n\n        /**\n         * Hide delete modal\n         */\n        function hideDeleteModal() {\n            vm.deleteModal = false;\n        }\n\n        /**\n         * load more\n         */\n        function loadMore(url) {\n            $http.get(url).success(function (res) {\n                vm.galleries = vm.galleries.concat(res.data);\n                vm.next = res.next_page_url;\n            });\n        }\n\n        /**\n         * Live search\n         */\n        function liveSearch() {\n            $http.post('/admin/api/gallery/search', {keyword: vm.search}).success(function (res) {\n                vm.galleries = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n            });\n        }\n\n        /**\n         * Success response\n         */\n        function _successResponse(successMessage) {\n            vm.errors = '';\n            vm.flash = successMessage;\n            vm.loading = false;\n            $timeout(function () {\n                vm.flash = false;\n            }, 5000);\n        }\n\n        /**\n         * Errors response\n         */\n        function _errorResponse(errors, flashError) {\n            vm.errors = errors;\n            vm.loading = false;\n            vm.flashError = flashError;\n            $timeout(function () {\n                vm.flashError = false;\n            }, 5000);\n        }\n\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.gallery')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'gallery',\n                config: {\n                    url: '/admin/gallery',\n                    templateUrl: '/admin/views/admin.gallery.index',\n                    controller: 'GalleryController',\n                    controllerAs: 'vm',\n                    title: 'Gallery'\n                }\n            },\n            {\n                state: 'gallery-create',\n                config: {\n                    url: '/admin/gallery/create',\n                    templateUrl: '/admin/views/admin.gallery.create',\n                    controller: 'GalleryController',\n                    controllerAs: 'vm',\n                    title: 'Create Gallery'\n                }\n            },\n            {\n                state: 'gallery-edit',\n                config: {\n                    url: '/admin/gallery/:id/edit',\n                    templateUrl: '/admin/views/admin.gallery.edit',\n                    controller: 'GalleryController',\n                    controllerAs: 'vm',\n                    title: 'Edit Gallery'\n                }\n            }\n        ];\n    }\n})();\n(function() {\n\n    'use strict';\n\n    angular\n        .module(\"app.login\")\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$http', '$window'];\n    /* @nginject */\n    function LoginController($http, $window) {\n\n        var vm = this;\n\n        vm.user = {};\n        vm.login = login;\n\n        /**\n         * Login\n         */\n        function login() {\n            $http.post('/admin/login', {user: vm.user})\n                .success(function (res) {\n                    $window.location.href = '/admin/dashboard';\n                })\n                .error(function(res) {\n                    vm.error = res;\n                });\n        }\n\n    }\n\n}());\n\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.login')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'login',\n                config: {\n                    url: '/admin/login',\n                    controller: 'LoginController',\n                    controllerAs: 'vm',\n                    title: 'Login'\n                }\n            }\n        ];\n    }\n})();\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.posts')\n        .controller('PostsController', PostsController);\n\n    PostsController.$inject = ['$http', '$timeout', '$stateParams', 'Post'];\n    /* @ngInject */\n    function PostsController($http, $timeout, $stateParams, Post) {\n\n        var vm = this;\n\n        vm.posts = {};\n        vm.post = {};\n\n        vm.create = create;\n        vm.update = update;\n        vm.deletePost = deletePost;\n        vm.hideImage = hideImage;\n        vm.showDeleteModal = showDeleteModal;\n        vm.hideDeleteModal = hideDeleteModal;\n        vm.deleteImage = deleteImage;\n        vm.liveSearch = liveSearch;\n        vm.loadMore = loadMore;\n\n        if(! $stateParams.id) { getPosts(); }\n        if($stateParams.id) { getPost(); }\n\n        /**\n         * Get all\n         */\n        function getPosts() {\n            Post.get(function (res) {\n                vm.posts = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n                vm.ready = true;\n            });\n        }\n\n        /**\n         * find by id\n         */\n        function getPost() {\n            vm.post = Post.get({id: $stateParams.id}, function() {\n                vm.ready = true;\n            });\n        }\n\n        /**\n         * Create\n         */\n        function create() {\n            vm.loading = true;\n\n            Post.save(vm.post, function(res) {\n                _successResponse(res.message);\n                vm.post = '';\n            }, function (err) {\n                _errorResponse(err.data, 'Post creation failed, see errors below');\n            });\n        }\n\n        /**\n         * Update\n         */\n        function update() {\n            vm.loading = true;\n\n            Post.update({id: vm.post.id}, vm.post, function (res) {\n                _successResponse(res.message);\n            }, function (err) {\n                _errorResponse(err.data, 'Post edition failed, see errors below');\n            });\n        }\n\n        /**\n         * Delete image\n         */\n        function deleteImage(id, file, image_id) {\n\n            if(image_id) {\n                $http.post('/admin/api/destroy-post-image', {id: id, image_id: image_id}).success(function(res) {\n                    var index = vm.post.post_images.indexOf(file);\n                    vm.post.post_images.splice(index, 1);\n                });\n            } else {\n                $http.post('/admin/api/destroy-post-image', {id: id }).success(function(res) {\n                    vm.post.image = null;\n                });\n            }\n        }\n\n        /**\n         * Hide Image\n         */\n        function hideImage(file) {\n            if(file) {\n                var index = vm.post.files.indexOf(file);\n                vm.post.files.splice(index, 1);\n            } else {\n                document.getElementById('single-uploader').value = null;\n                vm.post.file = null;\n            }\n        }\n\n        /**\n         * Show delete modal\n         */\n        function showDeleteModal(post) {\n            vm.post = post;\n            vm.deleteModal = true;\n        }\n\n        /**\n         * Delete\n         */\n        function deletePost() {\n            Post.delete({id: vm.post.id}, function (res) {\n                vm.posts.splice(vm.posts.indexOf(vm.post), 1);\n                vm.total = vm.total - 1;\n                vm.deleteModal = false;\n                vm.flash = res.message;\n                $timeout(function () {\n                    vm.flash = false;\n                }, 3000);\n            });\n        }\n\n        /**\n         * Hide delete modal\n         */\n        function hideDeleteModal() {\n            vm.deleteModal = false;\n        }\n\n        /**\n         * load more users\n         */\n        function loadMore(url) {\n            $http.get(url).success(function (res) {\n                vm.posts = vm.posts.concat(res.data);\n                vm.next = res.next_page_url;\n            });\n        }\n\n        /**\n         * Live search\n         */\n        function liveSearch() {\n            $http.post('/admin/api/posts/search', {keyword: vm.search}).success(function (res) {\n                vm.posts = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n            });\n        }\n\n        /**\n         * Success response\n         */\n        function _successResponse(successMessage) {\n            vm.errors = '';\n            vm.flash = successMessage;\n            vm.loading = false;\n            $timeout(function () {\n                vm.flash = false;\n            }, 5000);\n        }\n\n        /**\n         * Errors response\n         */\n        function _errorResponse(errors, flashError) {\n            vm.errors = errors;\n            vm.loading = false;\n            vm.flashError = flashError;\n            $timeout(function () {\n                vm.flashError = false;\n            }, 5000);\n        }\n\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.posts')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'posts',\n                config: {\n                    url: '/admin/posts',\n                    templateUrl: '/admin/views/admin.posts.index',\n                    controller: 'PostsController',\n                    controllerAs: 'vm',\n                    title: 'Posts'\n                }\n            },\n            {\n                state: 'post-create',\n                config: {\n                    url: '/admin/posts/create',\n                    templateUrl: '/admin/views/admin.posts.create',\n                    controller: 'PostsController',\n                    controllerAs: 'vm',\n                    title: 'Create Post'\n                }\n            },\n            {\n                state: 'post-edit',\n                config: {\n                    url: '/admin/posts/:id/edit',\n                    templateUrl: '/admin/views/admin.posts.edit',\n                    controller: 'PostsController',\n                    controllerAs: 'vm',\n                    title: 'Edit Post'\n                }\n            }\n        ];\n    }\n})();\n/* Help configure the state-base ui.router */\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.router')\n        .provider('routerHelper', routerHelperProvider);\n\n    routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    /* @ngInject */\n    function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\n        /* jshint validthis:true */\n        var config = {\n            docTitle: 'Admin',\n            resolveAlways: {}\n        };\n\n        $locationProvider.html5Mode(true);\n\n        this.configure = function(cfg) {\n            angular.extend(config, cfg);\n        };\n\n        this.$get = RouterHelper;\n        RouterHelper.$inject = ['$location', '$rootScope', '$state'];\n        /* @ngInject */\n        function RouterHelper($location, $rootScope, $state, logger) {\n            var handlingStateChangeError = false;\n            var hasOtherwise = false;\n            var stateCounts = {\n                errors: 0,\n                changes: 0\n            };\n\n            var service = {\n                configureStates: configureStates,\n                getStates: getStates,\n                stateCounts: stateCounts\n            };\n\n            init();\n\n            return service;\n\n            function configureStates(states, otherwisePath) {\n                states.forEach(function(state) {\n                    state.config.resolve =\n                        angular.extend(state.config.resolve || {}, config.resolveAlways);\n                    $stateProvider.state(state.state, state.config);\n                });\n                if (otherwisePath && !hasOtherwise) {\n                    hasOtherwise = true;\n                    $urlRouterProvider.otherwise(otherwisePath);\n                }\n            }\n\n            function handleRoutingErrors() {\n                // Route cancellation:\n                // On routing error, go to the dashboard.\n                // Provide an exit clause if it tries to do it twice.\n                $rootScope.$on('$stateChangeError',\n                    function(event, toState, toParams, fromState, fromParams, error) {\n                        if (handlingStateChangeError) {\n                            return;\n                        }\n                        stateCounts.errors++;\n                        handlingStateChangeError = true;\n                        var destination = (toState &&\n                            (toState.title || toState.name || toState.loadedTemplateUrl)) ||\n                            'unknown target';\n                        var msg = 'Error routing to ' + destination + '. ' +\n                            (error.data || '') + '. <br/>' + (error.statusText || '') +\n                            ': ' + (error.status || '');\n                        logger.warning(msg, [toState]);\n                        $location.path('/');\n                    }\n                );\n            }\n\n            function init() {\n                handleRoutingErrors();\n                updateDocTitle();\n            }\n\n            function getStates() { return $state.get(); }\n\n            function updateDocTitle() {\n                $rootScope.$on('$stateChangeSuccess',\n                    function(event, toState, toParams, fromState, fromParams) {\n                        stateCounts.changes++;\n                        handlingStateChangeError = false;\n                        var title = (toState.title || '') + ' · ' + config.docTitle;\n                        $rootScope.mainUrl = $state.current.url.split('/')[2];\n                        $rootScope.title = title; // data bind to <title>\n                    }\n                );\n            }\n        }\n    }\n\n})();\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.profile')\n        .controller('ProfileController', ProfileController);\n\n    ProfileController.$inject = ['$http', '$timeout', 'User', 'AuthUser'];\n    /* @ngInject */\n    function ProfileController($http, $timeout, User, AuthUser) {\n\n        var vm = this;\n\n        vm.authuser = {};\n\n        vm.update = update;\n        vm.deleteImage = deleteImage;\n        vm.hideImage = hideImage;\n        authUser();\n\n        /**\n         * Auth user\n         */\n        function authUser() {\n            AuthUser.get().success(function(res) {\n                vm.authUser = res;\n                vm.ready = true;\n            });\n        }\n\n        /**\n         * update\n         */\n        function update() {\n\n            vm.loading = true;\n\n            User.update({id: vm.authUser.id}, vm.authUser, function (res) {\n                _successResponse(res.message);\n            }, function (err) {\n                _errorResponse(err.data, 'User edition failed, see errors below');\n            });\n        }\n\n        /**\n         * Delete image\n         */\n        function deleteImage(id) {\n            $http.post('/admin/api/destroy-user-image', {id: id}).success(function(res) {\n                vm.authUser.file = null;\n                vm.authUser.image = null;\n            });\n        }\n\n        /**\n         * Hide image\n         */\n        function hideImage() {\n            vm.authUser.file = false;\n        }\n\n        /**\n         * Success response\n         */\n        function _successResponse(successMessage) {\n            vm.errors = '';\n            vm.flash = successMessage;\n            vm.loading = false;\n            $timeout(function () {\n                vm.flash = false;\n            }, 5000);\n        }\n\n        /**\n         * Errors response\n         */\n        function _errorResponse(errors, flashError) {\n            vm.errors = errors;\n            vm.loading = false;\n            vm.flashError = flashError;\n            $timeout(function () {\n                vm.flashError = false;\n            }, 5000);\n        }\n\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.profile')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'profile',\n                config: {\n                    url: '/admin/profile',\n                    templateUrl: '/admin/views/admin.profile.index',\n                    controller: 'ProfileController',\n                    controllerAs: 'vm',\n                    title: 'My Profile'\n                }\n            }\n        ];\n    }\n})();\n(function() {\n\n    'use strict';\n\n    angular\n        .module(\"app.services\")\n        .factory(\"AuthUser\", AuthUser);\n\n    AuthUser.$inject = ['$http'];\n    /* @ngInject */\n    function AuthUser($http) {\n        var service = {\n            get: get\n        };\n\n        return service;\n\n        function get() {\n            return $http.get('/admin/api/auth-user');\n        }\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module(\"app.gallery\")\n        .factory(\"Gallery\", Gallery);\n\n    Gallery.$inject = ['$resource'];\n    /* @ngInject */\n    function Gallery($resource) {\n        return $resource('/admin/api/gallery/:id', {id: '@_id'}, {\n            update: {\n                method: 'PUT'\n            }\n        });\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module(\"app.services\")\n        .factory(\"Post\", Post);\n\n    Post.$inject = ['$resource'];\n    /* @ngInject */\n    function Post($resource) {\n        return $resource('/admin/api/posts/:id', {id: '@_id'}, {\n            update: {\n                method: 'PUT'\n            }\n        });\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module(\"app.services\")\n        .factory(\"User\", User);\n\n    User.$inject = ['$resource'];\n    /* @ngInject */\n    function User($resource) {\n        return $resource('/admin/api/users/:id', {id: '@_id'}, {\n            update: {\n                method: 'PUT'\n            }\n        });\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.users')\n        .controller('UsersController', UsersController);\n\n    UsersController.$inject = ['$http', '$timeout', '$stateParams', 'User', 'AuthUser'];\n    /* @nginject */\n    function UsersController($http, $timeout, $stateParams, User, AuthUser) {\n\n        var vm = this;\n\n        vm.user = {};\n        vm.users = {};\n        vm.authuser = {};\n        vm.create = create;\n        vm.update = update;\n        vm.deleteUser = deleteUser;\n        vm.hideImage = hideImage;\n        vm.deleteImage = deleteImage;\n        vm.showDeleteModal = showDeleteModal;\n        vm.hideDeleteModal = hideDeleteModal;\n        vm.loadMore = loadMore;\n        vm.liveSearch = liveSearch;\n        vm.filterByRole = filterByRole;\n        authUser();\n        if(! $stateParams.id) { getUsers(); }\n        if($stateParams.id) { getUser(); }\n\n        /**\n         * Auth user\n         */\n        function authUser() {\n            AuthUser.get().success(function(res) {\n                vm.authUser = res;\n                vm.isUploaded = res.image ? true : false;\n            });\n        }\n\n        /**\n         * Get all\n         */\n        function getUsers() {\n            User.get(function (res) {\n                vm.users = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n                vm.ready = true;\n            });\n        }\n\n        /**\n         * find by id\n         */\n        function getUser() {\n            vm.user = User.get({id: $stateParams.id}, function() {\n                vm.ready = true;\n            });\n        }\n\n        /**\n         * Create\n         */\n        function create() {\n            vm.loading = true;\n\n            User.save(vm.user, function (res) {\n                _successResponse(res.message);\n                vm.user = {\n                    user_roles: {\n                        role: 'Role'\n                    }\n                };\n            }, function (err) {\n                _errorResponse(err.data, 'User creation failed see errors below');\n            });\n        }\n\n        /**\n         * update user\n         */\n        function update() {\n            vm.loading = true;\n\n            User.update({id: vm.user.id}, vm.user, function (res) {\n                _successResponse(res.message);\n            }, function (err) {\n                _errorResponse(err.data, \"User edition failed see errors below\");\n            });\n        }\n\n        /**\n         * Delete\n         */\n        function deleteUser() {\n            User.delete({id: vm.user.id}, function (res) {\n                vm.users.splice(vm.users.indexOf(vm.user), 1);\n                vm.total = vm.total - 1;\n                vm.deleteModal = false;\n                vm.flash = res.message;\n                $timeout(function () {\n                    vm.flash = false;\n                }, 3000);\n            });\n        }\n\n        /**\n         * Show delete modal\n         */\n        function showDeleteModal(user) {\n            vm.user = user;\n            vm.deleteModal = true;\n        }\n\n        /**\n         * Hide delete modal\n         */\n        function hideDeleteModal() {\n            vm.deleteModal = false;\n        }\n\n        /**\n         * load more\n         */\n        function loadMore(url) {\n            $http.get(url).success(function (res) {\n                vm.next = res.next_page_url;\n                vm.users = vm.users.concat(res.data);\n            });\n        }\n\n        /**\n         * Live search\n         */\n        function liveSearch() {\n            $http.post('/admin/api/users/search', {keyword: vm.search}).success(function (res) {\n                vm.users = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n            });\n        }\n\n        /**\n         * Filter by role\n         */\n        function filterByRole() {\n            $http.post('/admin/api/users/user-role-filter', {role: vm.roleFilter}).success(function (res) {\n                vm.users = res.data;\n                vm.total = res.total;\n                vm.next = res.next_page_url;\n            });\n        }\n\n        /**\n         * Delete image\n         */\n        function deleteImage(id) {\n            $http.post('/admin/api/destroy-user-image', {id: id}).success(function(res) {\n                document.getElementById('single-uploader').value = null;\n                vm.user.image = null;\n            });\n        }\n\n        /**\n         * Hide image\n         */\n        function hideImage() {\n            document.getElementById('single-uploader').value = null;\n            vm.user.file = false;\n        }\n\n        /**\n         * Success response\n         */\n        function _successResponse(successMessage) {\n            vm.errors = '';\n            vm.flash = successMessage;\n            vm.loading = false;\n            $timeout(function () {\n                vm.flash = false;\n            }, 5000);\n        }\n\n        /**\n         * Errors response\n         */\n        function _errorResponse(errors, flashError) {\n            vm.errors = errors;\n            vm.loading = false;\n            vm.flashError = flashError;\n            $timeout(function () {\n                vm.flashError = false;\n            }, 5000);\n        }\n\n    }\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n        .module('app.users')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'users',\n                config: {\n                    url: '/admin/users',\n                    templateUrl: '/admin/views/admin.users.index',\n                    controller: 'UsersController',\n                    controllerAs: 'vm',\n                    title: 'Users'\n                }\n            },\n            {\n                state: 'user-create',\n                config: {\n                    url: '/admin/users/create',\n                    templateUrl: '/admin/views/admin.users.create',\n                    controller: 'UsersController',\n                    controllerAs: 'vm',\n                    title: 'Create User'\n                }\n            },\n            {\n                state: 'user-edit',\n                config: {\n                    url: '/admin/users/:id/edit',\n                    templateUrl: '/admin/views/admin.users.edit',\n                    controller: 'UsersController',\n                    controllerAs: 'vm',\n                    title: 'Edit User'\n                }\n            }\n        ];\n    }\n})();"],"sourceRoot":"/source/"}